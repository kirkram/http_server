server {
  listen        127.0.0.1:8080;
  server_name   one.example.com; #should we handle one name only, or several names as nginx does it?
  client_max_body_size 10M; #Nginx handles both Mega- or Kylo- bytes. I think it is optional we can use only one

  error_page 404 /www/error_pages/404.html; #Relative path here

  location / {
    limit_except GET POST DELETE
    
    root /www;
    autoindex on;
    index index.html;
    upload /uploads;
  }

  location /abc {
    limit_except GET POST DELETE
    
    root /www;
    autoindex on;
    index index.html;
    upload /uploads;
  }

  location /test {
    limit_except GET POST DELETE #Only GET method allowed
    
    root /www/test; 
    autoindex on;
    index index.html;
    upload /uploads;
  }

  location /redirect {
    limit_except GET POST DELETE #Only GET method allowed
    
    return 301 http://google.com;
    root /www/test; 
    autoindex on;
    index indexcopy.html;
    upload /uploads;
  }
}

server {
  listen        127.0.0.2:8080;
  server_name   two.example.com; #should we handle one name only, or several names as nginx does it?
  client_max_body_size 10M; #Nginx handles both Mega- or Kylo- bytes. I think it is optional we can use only one

  error_page 404 /custom_404.html; #Relative path here

  location /old-page {
    limit_except GET #Only GET method allowed
    return 307 http://example.com; #Attemp to connect to 127.0.0.1:8080/old-page should be redirected to the new address.
                                            #Not sure how to deal with this yet(assume that we should just send response to the browser and it'll send new request later).
    root /temp/html;
    autoindex on;
    index index.html;
    #TBD "Execute CGI based on certain file extension (for example .php)." - Not sure how to deal with this yet
    #TBD "Make the route able to accept uploaded files and configure where they shouldbe saved. - Not sure how to deal with this yet
  }
}

server {
  listen        127.0.0.3:8080;
  server_name   two.example.com; #should we handle one name only, or several names as nginx does it?
  client_max_body_size 10M; #Nginx handles both Mega- or Kylo- bytes. I think it is optional we can use only one

  error_page 404 /custom_404.html; #Relative path here

  location /old-page {
    limit_except GET #Only GET method allowed
    return 302 http://example.com; #Attemp to connect to 127.0.0.1:8080/old-page should be redirected to the new address.
                                            #Not sure how to deal with this yet(assume that we should just send response to the browser and it'll send new request later).
    root /temp/html;
    autoindex on;
    index index.html;
    #TBD "Execute CGI based on certain file extension (for example .php)." - Not sure how to deal with this yet
    #TBD "Make the route able to accept uploaded files and configure where they shouldbe saved. - Not sure how to deal with this yet
  }
}

server {
  listen        127.0.0.4:8080;
  server_name   two.example.com; #should we handle one name only, or several names as nginx does it?
  client_max_body_size 10M; #Nginx handles both Mega- or Kylo- bytes. I think it is optional we can use only one

  error_page 404 /custom_404.html; #Relative path here

  location /old-page {
    limit_except GET #Only GET method allowed
    return 302 http://example.com; #Attemp to connect to 127.0.0.1:8080/old-page should be redirected to the new address.
                                            #Not sure how to deal with this yet(assume that we should just send response to the browser and it'll send new request later).
    root /temp/html;
    autoindex on;
    index index.html;
    #TBD "Execute CGI based on certain file extension (for example .php)." - Not sure how to deal with this yet
    #TBD "Make the route able to accept uploaded files and configure where they shouldbe saved. - Not sure how to deal with this yet
  }
}
